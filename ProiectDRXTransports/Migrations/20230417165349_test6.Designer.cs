// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectDRXTransports.Data;

#nullable disable

namespace ProiectDRXTransports.Migrations
{
    [DbContext(typeof(ProiectDRXTransportsContext))]
    [Migration("20230417165349_test6")]
    partial class test6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProiectDRXTransports.Models.DriverModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNr")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DriverModel");
                });

            modelBuilder.Entity("ProiectDRXTransports.Models.LocationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocationModel");
                });

            modelBuilder.Entity("ProiectDRXTransports.Models.TransportationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DriverModelId")
                        .HasColumnType("int");

                    b.Property<int>("LocationModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusTransport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DriverModelId");

                    b.HasIndex("LocationModelId");

                    b.ToTable("TransportationModel");
                });

            modelBuilder.Entity("ProiectDRXTransports.Models.TraTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DriverModelId")
                        .HasColumnType("int");

                    b.Property<int>("LocationModelId")
                        .HasColumnType("int");

                    b.Property<string>("StatusTransport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DriverModelId");

                    b.HasIndex("LocationModelId");

                    b.ToTable("TraTest");
                });

            modelBuilder.Entity("ProiectDRXTransports.Models.TransportationModel", b =>
                {
                    b.HasOne("ProiectDRXTransports.Models.DriverModel", "DriverModel")
                        .WithMany()
                        .HasForeignKey("DriverModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectDRXTransports.Models.LocationModel", "LocationModel")
                        .WithMany()
                        .HasForeignKey("LocationModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DriverModel");

                    b.Navigation("LocationModel");
                });

            modelBuilder.Entity("ProiectDRXTransports.Models.TraTest", b =>
                {
                    b.HasOne("ProiectDRXTransports.Models.DriverModel", "DriverModel")
                        .WithMany()
                        .HasForeignKey("DriverModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectDRXTransports.Models.LocationModel", "LocationModel")
                        .WithMany()
                        .HasForeignKey("LocationModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DriverModel");

                    b.Navigation("LocationModel");
                });
#pragma warning restore 612, 618
        }
    }
}
